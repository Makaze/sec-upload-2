import s from"react";import{FileStatus as e}from"../../types.mjs";import{storageManagerStateReducer as i}from"./reducer.mjs";import{addFilesAction as r,clearFilesAction as t,setUploadingFileAction as o,setUploadProgressAction as a,setUploadStatusAction as d,removeUploadAction as l}from"./actions.mjs";import{isObject as p}from"@aws-amplify/ui";const m=s=>(s=>!(!p(s)||!s.key))(s)?Object.assign(Object.assign({},s),{id:s.key,status:e.UPLOADED}):void 0;function u(p=[]){const[{files:u},f]=s.useReducer(i,{files:Array.isArray(p)?p.map(m).filter((s=>!!s)):[]});return{removeUpload:({id:s})=>{f(l({id:s}))},setUploadPaused:({id:s})=>{f(d({id:s,status:e.PAUSED}))},setUploadProgress:({progress:s,id:e})=>{f(a({id:e,progress:s}))},setUploadResumed:({id:s})=>{f(d({id:s,status:e.UPLOADING}))},setUploadSuccess:({id:s})=>{f(d({id:s,status:e.UPLOADED}))},setUploadingFile:({uploadTask:s,id:e})=>{f(o({id:e,uploadTask:s}))},addFiles:({files:s,getFileErrorMessage:e})=>{f(r({files:s,getFileErrorMessage:e}))},clearFiles:()=>{f(t())},files:u}}export{u as useStorageManager};
